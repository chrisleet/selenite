#############################
#   Calibrate Config File   #
#############################

# This is the config file for fitting a telluric model to a science spectrum.
# The config file comes in three parts:
# i)    Basic Config: These options should be set everytime the program is run.
# ii)   Debugging: Plot various stages of the fitting for debugging.
# iii)  Advanced Config: Sane defaults for certain fitting parameters. Can be
#       changed sparingly.

####################
#   Basic Config   #
####################

# ORDERS
# List of orders to correct. Valid inputs are:
# a) A list of integers between 0-81 inclusive denoting the records to 
#    correct.
# b) A string keyword representing a set of orders. Recognized keywords are:
#    i)   "all" = all orders, equivalent to the list [0, ..., 85]
# (17: Ηβ, 56: ΝaD, 67: Hα)
# Order 71: 6837-6923
# Order 72: 6915-7001
# Order 73: 6994-7082
orders: [72]

# THRESHOLD_K_DB_PATH
# Path to k_threshold database
thresholds_file: "selenite/data/threshold_k.csv"

# NORMED_BSTAR_PATH
# Path to file containing normalized B star data
normed_bstar_path: "test_data/normed_bstars"

########################
#   DEBUGGING PLOTS    #
########################
# These options plot the calibration process's workings at each of its stages.
# Useful for debugging or for general interest.

# i. Preprocessing plots
# Plot each spectra before processing
plot_raw_data: False
# Plot each b star spectra's SNR, highlighting rejected b stars
plot_bstar_snrs: False
# Plot each b star spectra's SNR after rejected b stars are removed
plot_bstar_snrs_after_filtering: False
# Plot b star uncertainties annotated with the uncertainty cutoff
plot_bstar_uncertainty: False
# Plot b star wavelength cutoffs against spectra before cutting
plot_bstar_cutoffs: False
# Plot b star wavelength cutoffs against spectra after cutting
plot_cut_bstar_cutoffs: False
# Plot each spectra after normalization.
plot_norm_data: False
# Plot each shard after it has been aligned
plot_aligned_data: True
# Plot each spectra after filtering.
plot_filtered_data: False


# ii. Pixel classification plots
# Plot each shard with each spectrum colored by its PWV
plot_shard_PWVs: True
# Plot each shard with each spectrum colored by its z
plot_shard_zs: True
# Plot each shard with each pixel colored by its water PCC
plot_water_PCCs: True
# Plot each shard colored by water PCC with signficant pixels highlighted.
plot_water_px: False
# Plot each shard colored by water PCC with significant pixels highlighted 
# after false positive removal and after the neighbouring pixels to each
# pixel cluster have been added to it to get the cluster's line's tail.
plot_water_px_no_fp: False
# Plot each shard with each pixel colored by its z PCC
plot_z_PCCs: True
# Plot each shard colored by z PCC with signficant pixels highlighted.
plot_z_px: False
# Plot each shard colored by z PCC with significant pixels highlighted 
# after FP removal and after the neighbouring pixels to each
# pixel's cluster have been added to it to get the cluster's line's tail.
plot_z_px_no_fp: False
# Plot each shard with pixels colored by their classification. Airmass pixels
# are colored red, water pixels are colored blue, composite pixels are 
# colored lilac, and saturated pixels are colored grey.
plot_px_classification: True
# Plot regression lines for selected pixels
plot_regressions: False

#######################
#   ADVANCED CONFIG   #
#######################

# P_VALUE
# The significance level of telluric detection. When p_value = k, CRYSTAL
# only selects PCCs with a p < k probability of arising by chance. 
# p_value must be between 0.1 and 0.00001. Note that since single and 
# double pixel clusters are discarded, assuming that the 
# Gaussian noise in each pixel is independent, the probability of 
# generating a false cluster of three pixels is p_value^3. We thus 
# recommend a low p_value like 0.05 (N.B. 0.05^3 = 0.000125) to
# minimize false positives.
p_value: 0.1

# PEAK IDENTIFICATION GRADIENT
# Sets the gradient threshold used for peak identification. If a cluster of
# pixels' gradient first falls below this threshold and then jumps above it,
# the cluster of peaks is marked as a peak. Don't change this unless you are
# sure that you know what you are doing. (There's a extra plot in the peak
# detection code which you can activate which shows each cluster and whether
# it is classified as a peak if you want to play around with peak detection.)
threshold_gradient: 0.002

# CALIBRATORS
# The calibration line/suite of calibration lines to use for water telluric
# identification. Should be entered as a list of wavelengths in Angstroms; 
# the pixel nearest each given wavelength will be selected.
# e.g.
# - 5989.15

calibrators:

  
# 217014
#  ######### New order 72 (217014)
  - 6939.63
  - 6941.54
  - 6942.11
  - 6943.14
  - 6944.07
  - 6949.46
##  ######### Old order 72 (217014)
  - 6952.68
  - 6961.38  #<
  - 6966.47 
  - 6979.41       
  - 6986.87
  - 6988.51
  - 6989.80
  - 6990.91  #<
  - 6992.30
  - 6995.45

# SATURATION_THRESHOLD
# Pixels with log intensity below this value are marked as saturated
saturation_threshold: -2.9

# B STAR SNR CUTOFF
# B star spectra with blaze peak SNR lower than this value are not used
b_star_SNR_cutoff: 150 #190

# HIGH ORDER B STAR SNR CUTOFF
# At high orders (>82) where the signal is weak, we pick a lower SNR cutoff
high_order_b_star_SNR_cutoff: 75

# B STAR UNCERTAINTY GRADIENT CUTOFF
# The gradient of the "U" of uncertainty beyond which points are thrown away
b_star_uncertainity_gradient_cutoff: 0.00005 #0.00015 #0.00005




